name: release
description: release
inputs:
  checkout_dir:
    description: |
      The directory where the repository is checked out.
    default: .
  ref:
    description: |
      The branch or tag to release.
    default: ${{ github.ref }}
  github_token:
    description: |
      The GitHub token to use for authentication. Must have `contents: write` permission if creating a release or tag.
    default: ${{ github.token }}
  create_tag:
    description: |
      Whether to create a tag for the release. Any non-empty value will be treated as true.
  create_release:
    description: |
      Whether to create a release. Any non-empty value will be treated as true.
      
      Implies `create_tag`.
  release_notes:
    description: |
      The release notes to use for the release. If not provided, release notes will be generated by GitHub's release
      notes generator.
      
      Ignored unless create_release is set.
  tag_prefix:
    description: |
      The prefix to use for the tag. Defaults to `v`.
    default: v
  default_previous_version:
    description: |
      The default previous version to use if no previous version can be found. This is used to for the first release.
      
      Set to empty string to disable cause it to error if no previous version can be found.
    default: 0.0.0
outputs:
  previous_ref:
    value: ${{ steps.prev.outputs.ref }}
    description: |
      A git ref pointing to the previous release, or the current ref if no previous release can be found.
  previous_version:
    value: ${{ steps.prev.outputs.version }}
    description: |
      The previous version on the release branch.
  first_release:
    value: ${{ steps.prev.outputs.first_release }}
    description: |
      Whether this is the first release on the release branch. Either "true" or "false".
runs:
  using: composite
  steps:
    - name: check repo
      shell: sh
      working-directory: ${{ inputs.checkout_dir }}
      run: |
        if [ "$(git rev-parse --is-shallow-repository)" = "true" ]; then
          echo "fatal: shallow clones are not supported" >&2
          exit 1
        fi
    - name: get previous tag
      shell: sh
      id: prev
      env:
        REF: ${{ inputs.ref }}
        TAG_PREFIX: ${{ inputs.tag_prefix }}
        DEFAULT_PREVIOUS_VERSION: ${{ inputs.default_previous_version }}
      working-directory: ${{ inputs.checkout_dir }}
      run: |
        "${{ github.action_path }}"/script/prev > $GITHUB_OUTPUT

